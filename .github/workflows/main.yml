name: Build
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  cypress:
    name: Cypress
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set up Node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: docker-compose up -d
      - run: mvn spring-boot:run -Dspring-boot.run.profiles=local &
      - name: Cypress install and test
        uses: cypress-io/github-action@v2
        with:
          record: true
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 120
        env:
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_TOKEN}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  k6:
    name: K6 load test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - run: docker-compose up -d
      - run: mvn spring-boot:run -Dspring-boot.run.profiles=local &
      - run: sleep 45s
      - name: Run k6 local test
        uses: grafana/k6-action@v0.2.0
        with:
          filename: ./k6/test_api.js
          flags: --vus 50 --duration 10s
    #      - run: docker run --rm -i grafana/k6 run - < ./k6/test_api.js
    #      - run: docker run --rm -i grafana/k6 --vus 10 --duration 30s run - < ./k6/test_api.js
    #      - run: docker run --rm -i grafana/k6 run - < ./k6/test_jobs_api.js
    #      - run: docker run --rm -i grafana/k6 --vus 10 --duration 30s run - < ./k6/test_jobs_api.js
    #      - run: docker run --rm -i grafana/k6 run - < ./k6/test_user_api.js
    #      - run: docker run --rm -i grafana/k6 --vus 10 --duration 30s run - < ./k6/test_user_api.js
  unit-and-sonar:
    name: Unit test and Sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -X -Dsonar.projectKey=Julien1498_refonte-implicaction -Dsonar.verbose=true

  build-and-push:
    name: Building and push docker image on Github container
    needs: unit-and-sonar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get last tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Coontainer
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build db image
        run: docker build -t ${{ github.repository_owner }}/implicaction-db:latest -f Dockerfiles/Dockerfile-mysql .
      - name: Build app image
        run: docker build -t ${{ github.repository_owner }}/implicaction-app:latest -f Dockerfiles/Dockerfile-spring .
      - name: Push db
        run: |
          docker image tag ${{ github.repository_owner }}/implicaction-db:latest \
          ${{ github.repository_owner }}/implicaction-db:${{ steps.previoustag.outputs.tag }}
          docker push ${{ github.repository_owner }}/implicaction-db:${{ steps.previoustag.outputs.tag }}
      - name: Push app
        run: |
          docker image tag ${{ github.repository_owner }}/implicaction-app:latest \
          ${{ github.repository_owner }}/implicaction-app:${{ steps.previoustag.outputs.tag }}
          docker push ${{ github.repository_owner }}/implicaction-app:${{ steps.previoustag.outputs.tag }}
